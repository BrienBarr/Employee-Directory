{"version":3,"sources":["utils/API.js","components/Alert/index.js","components/Search/index.js","components/Table/index.js","App.js","reportWebVitals.js","index.js"],"names":["API","getEmployees","axios","get","Alert","props","className","message","Search","styles","nav","backgroundColor","input","marginRight","width","style","onSubmit","handleFormSubmit","type","placeholder","aria-label","onChange","handleInputChange","employees","length","Table","React","useState","sortField","setSortField","sortDirection","setSortDirection","sortedEmployees","sort","a","b","aVal","bVal","aVal2","bVal2","name","last","first","email","location","state","city","scope","onClick","map","item","src","picture","thumbnail","alt","App","filter","event","console","log","target","value","setState","filterEmployees","emp","toLowerCase","firstName","lastName","includes","preventDefault","then","res","data","results","allEmployees","catch","err","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94784e97.chunk.js","sourcesContent":["import axios from \"axios\";\nconst API = {\n  getEmployees: function() {\n    return axios.get(\"https://randomuser.me/api/?results=100&nat=us\");\n  }\n}\nexport default API;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Alert(props) {\n  return (\n    <div>\n      <p className=\"alert\">{props.message}</p>\n    </div>\n  );\n}\n\nexport default Alert;\n","import React from \"react\";\nimport Alert from \"../Alert\"\n\nfunction Search (props) {\n  \n  const styles = {\n    nav: {\n      backgroundColor: \"#c5c5c5\"\n    },\n    \n    input: {\n      marginRight: \"5px\",\n      width: \"230px\"\n    }\n  }\n\n  return(\n    <div>\n      <nav className=\"navbar d-flex justify-content-center\" style={styles.nav}>\n        <form className=\"form-inline\" onSubmit={props.handleFormSubmit}>\n          <input \n            className=\"form-control mr-sm-2\" \n            style={styles.input}\n            type=\"search\" \n            placeholder=\"Filter By First or Last Name\" \n            aria-label=\"Filter By First or Last Name\"\n            onChange={props.handleInputChange}\n          />\n        </form>\n      </nav>\n      <Alert \n        message={props.employees.length === 0 ? \"No results found.\" : \"\"}\n      >\n      </Alert>\n    </div>\n  )\n}\n\nexport default Search;","import React from 'react';\nimport \"./style.css\";\n\nfunction Table(props) {\n  const { employees } = props;\n  const [sortField, setSortField] = React.useState(null);\n  const [sortDirection, setSortDirection] = React.useState('ascending');\n  \n  let sortedEmployees = [...employees];\n\n  sortedEmployees.sort((a, b) => {\n    let aVal;\n    let bVal;\n    let aVal2;\n    let bVal2;\n\n    switch (sortField){\n      case 'last':\n        aVal = a.name.last;\n        bVal = b.name.last;\n        aVal2 = a.name.first;\n        bVal2 = b.name.first;\n        break;\n      case 'email':\n        aVal = a.email;\n        bVal = b.email;\n        break;\n      case 'location':\n        aVal = a.location.state;\n        bVal = b.location.state;\n        aVal2 = a.location.city;\n        bVal2 = b.location.city;\n        break;\n      default:\n        aVal = a.name.last;\n        bVal = b.name.last;\n        aVal2 = a.name.first;\n        bVal2 = b.name.first;\n    }\n\n    if (aVal < bVal) {\n      return sortDirection === 'ascending' ? -1 : 1;\n    } else if (aVal > bVal) {\n      return sortDirection === 'ascending' ? 1 : -1;\n    } else {\n      if (aVal2 < bVal2){\n        return sortDirection === 'ascending' ? -1 : 1;\n      } else if (aVal2 > bVal2){\n        return sortDirection === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    }\n  });  \n  \n  \n  return (\n    <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">First</th>\n            <th \n              scope=\"col\" \n              onClick={() => setSortField('last')}\n            >\n              Last\n              <i className=\"fas fa-arrow-up\" onClick={() => setSortDirection('ascending')}></i>\n              <i className=\"fas fa-arrow-down\" onClick={() => setSortDirection('descending')}></i>\n            </th>\n            <th \n              scope=\"col\" \n              onClick={() => setSortField('email')}\n            >\n              E-mail\n              <i className=\"fas fa-arrow-up\" onClick={() => setSortDirection('ascending')}></i>\n              <i className=\"fas fa-arrow-down\" onClick={() => setSortDirection('descending')}></i>\n            </th>\n            <th \n              scope=\"col\" \n              onClick={() => setSortField('location')}\n            >\n              Location\n              <i className=\"fas fa-arrow-up\" onClick={() => setSortDirection('ascending')}></i>\n              <i className=\"fas fa-arrow-down\" onClick={() => setSortDirection('descending')}></i>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedEmployees.map(\n            item => {\n              return (\n                  <tr key={item.email}>\n                    <td><img src={item.picture.thumbnail} alt={item.name.first + item.name.last} /></td>\n                    <td>{item.name.first}</td>\n                    <td>{item.name.last}</td>\n                    <td>{item.email}</td>\n                    <td>{item.location.city}, {item.location.state}</td>\n                  </tr>\n              )\n            }\n          )}\n        </tbody>\n      </table>\n  )\n};\n\nexport default Table;","import React from 'react';\nimport './App.css';\nimport API from './utils/API'\nimport Search from './components/Search';\nimport Table from './components/Table';\n\nclass App extends React.Component {\n\n  state = {\n    employees: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    API.getEmployees()\n      .then(res => {\n        this.setState({ employees: res.data.results });\n        this.setState({ allEmployees: res.data.results });\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    console.log(event.target.value)\n    this.setState({ filter: event.target.value });\n  };\n\n  filterEmployees = () => {\n    if(this.state.filter === \"\"){\n      return this.state.employees;\n    } else {\n      let filtered_employees = this.state.employees.filter( emp => {\n        let filter = this.state.filter.toLowerCase();\n        let firstName = emp.name.first.toLowerCase();\n        let lastName = emp.name.last.toLowerCase();\n        return firstName.includes(filter) || lastName.includes(filter);\n      });\n      return filtered_employees;\n    }\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div className=\"card w-100 text-center\">\n        <div className=\"card-header bg-primary text-white\">\n          <h1>Employee Directory</h1>\n        </div>\n        <Search \n          employees = {this.filterEmployees()}\n          filter = {this.state.filter}\n          handleFormSubmit = {this.handleFormSubmit}\n          handleInputChange = {this.handleInputChange}\n        />\n        <Table employees = {this.filterEmployees()}/>\n        <footer className=\"footer footer-dark bg-dark\">\n          <div className=\"container\">\n            <strong>Created by Brien Barr 2021</strong>\n          </div>\n        </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}